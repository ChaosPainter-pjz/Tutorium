// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections.Generic;

public class LinearPlotList
{
	public class Row
	{
		public string PlotId;
		public string Text;
		public string RoleID;
		public string RolePortrait;
		public string NextPlotId;
		public string ResultsB;
		public string ResultsA;

	}
	public LinearPlotList(TextAsset csv)
	{
		Load(csv);
	}
	List<Row> rowList = new List<Row>();
	bool isLoaded = false;

	public bool IsLoaded() => isLoaded;

	public List<Row> GetRowList() => rowList;

	public void Load(TextAsset csv)
	{
		rowList.Clear();
		string[][] grid = CsvParser2.Parse(csv.text);
		for(int i = 1 ; i < grid.Length ; i++)
		{
			Row row = new Row();
			row.PlotId = grid[i][0];
			row.Text = grid[i][1];
			row.RoleID = grid[i][2];
			row.RolePortrait = grid[i][3];
			row.NextPlotId = grid[i][4];
			row.ResultsB = grid[i][5];
			row.ResultsA = grid[i][6];

			rowList.Add(row);
		}
		isLoaded = true;
	}

	public int Count() => rowList.Count;
	public Row this[int i] => rowList[i];

	public Row Find_PlotId(string find)
	{
		return rowList.Find(x => x.PlotId == find);
	}
	public List<Row> FindAll_PlotId(string find)
	{
		return rowList.FindAll(x => x.PlotId == find);
	}
	public Row Find_Text(string find)
	{
		return rowList.Find(x => x.Text == find);
	}
	public List<Row> FindAll_Text(string find)
	{
		return rowList.FindAll(x => x.Text == find);
	}
	public Row Find_RoleID(string find)
	{
		return rowList.Find(x => x.RoleID == find);
	}
	public List<Row> FindAll_RoleID(string find)
	{
		return rowList.FindAll(x => x.RoleID == find);
	}
	public Row Find_RolePortrait(string find)
	{
		return rowList.Find(x => x.RolePortrait == find);
	}
	public List<Row> FindAll_RolePortrait(string find)
	{
		return rowList.FindAll(x => x.RolePortrait == find);
	}
	public Row Find_NextPlotId(string find)
	{
		return rowList.Find(x => x.NextPlotId == find);
	}
	public List<Row> FindAll_NextPlotId(string find)
	{
		return rowList.FindAll(x => x.NextPlotId == find);
	}
	public Row Find_ResultsB(string find)
	{
		return rowList.Find(x => x.ResultsB == find);
	}
	public List<Row> FindAll_ResultsB(string find)
	{
		return rowList.FindAll(x => x.ResultsB == find);
	}
	public Row Find_ResultsA(string find)
	{
		return rowList.Find(x => x.ResultsA == find);
	}
	public List<Row> FindAll_ResultsA(string find)
	{
		return rowList.FindAll(x => x.ResultsA == find);
	}

}