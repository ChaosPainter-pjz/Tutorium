// This code automatically generated by TableCodeGen

using System.Collections.Generic;
using Basic.CSV2Table.Scripts;
using UnityEngine;

namespace Basic.CSV2Table
{
    public class StudentWeeklyPropertyList
    {
        public class Row
        {
            public string id;
            public string 语文;
            public string 数学;
            public string 英语;
            public string 政治;
            public string 历史;
            public string 地理;
            public string 物理;
            public string 化学;
            public string 生物;
        }

        public StudentWeeklyPropertyList(TextAsset csv)
        {
            Load(csv);
        }

        private List<Row> rowList = new();
        private bool isLoaded = false;

        public bool IsLoaded()
        {
            return isLoaded;
        }

        public List<Row> GetRowList()
        {
            return rowList;
        }

        public void Load(TextAsset csv)
        {
            rowList.Clear();
            var grid = CsvParser2.Parse(csv.text);
            for (var i = 1; i < grid.Length; i++)
            {
                var row = new Row();
                row.id = grid[i][0];
                row.语文 = grid[i][1];
                row.数学 = grid[i][2];
                row.英语 = grid[i][3];
                row.政治 = grid[i][4];
                row.历史 = grid[i][5];
                row.地理 = grid[i][6];
                row.物理 = grid[i][7];
                row.化学 = grid[i][8];
                row.生物 = grid[i][9];

                rowList.Add(row);
            }

            isLoaded = true;
        }

        public int Count()
        {
            return rowList.Count;
        }

        public Row this[int i] => rowList[i];

        public Row Find_id(string find)
        {
            return rowList.Find(x => x.id == find);
        }

        public List<Row> FindAll_id(string find)
        {
            return rowList.FindAll(x => x.id == find);
        }

        public Row Find_语文(string find)
        {
            return rowList.Find(x => x.语文 == find);
        }

        public List<Row> FindAll_语文(string find)
        {
            return rowList.FindAll(x => x.语文 == find);
        }

        public Row Find_数学(string find)
        {
            return rowList.Find(x => x.数学 == find);
        }

        public List<Row> FindAll_数学(string find)
        {
            return rowList.FindAll(x => x.数学 == find);
        }

        public Row Find_英语(string find)
        {
            return rowList.Find(x => x.英语 == find);
        }

        public List<Row> FindAll_英语(string find)
        {
            return rowList.FindAll(x => x.英语 == find);
        }

        public Row Find_政治(string find)
        {
            return rowList.Find(x => x.政治 == find);
        }

        public List<Row> FindAll_政治(string find)
        {
            return rowList.FindAll(x => x.政治 == find);
        }

        public Row Find_历史(string find)
        {
            return rowList.Find(x => x.历史 == find);
        }

        public List<Row> FindAll_历史(string find)
        {
            return rowList.FindAll(x => x.历史 == find);
        }

        public Row Find_地理(string find)
        {
            return rowList.Find(x => x.地理 == find);
        }

        public List<Row> FindAll_地理(string find)
        {
            return rowList.FindAll(x => x.地理 == find);
        }

        public Row Find_物理(string find)
        {
            return rowList.Find(x => x.物理 == find);
        }

        public List<Row> FindAll_物理(string find)
        {
            return rowList.FindAll(x => x.物理 == find);
        }

        public Row Find_化学(string find)
        {
            return rowList.Find(x => x.化学 == find);
        }

        public List<Row> FindAll_化学(string find)
        {
            return rowList.FindAll(x => x.化学 == find);
        }

        public Row Find_生物(string find)
        {
            return rowList.Find(x => x.生物 == find);
        }

        public List<Row> FindAll_生物(string find)
        {
            return rowList.FindAll(x => x.生物 == find);
        }
    }
}